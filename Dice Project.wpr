#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('../../Labs/cosc428-lab2'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab1'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab6'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab5'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab4'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab3'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../../../2020/S2/ENMT482/Assignment 1/Part B'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../../../2020/S2/ENMT482/Assignment 1/Part A'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True}]
proj.file-list = [loc('android.txt'),
                  loc('displayResolution.py'),
                  loc('main.kv'),
                  loc('main.py'),
                  loc('test.py'),
                  loc('testKivy.py'),
                  loc('tf_text_graph_common.py'),
                  loc('tf_train_model.py'),
                  loc('train_model.py')]
proj.file-type = 'normal'
[user attributes]
debug.breakpoints = {loc('test.py'): {31L: (0,
        None,
        1,
        0)},
                     loc('tf_train_model.py'): {176L: (0,
        None,
        1,
        0)},
                     loc('../../Labs/cosc428-lab1/video_from_webcam.py'): {10L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('test.py'): {},
                    loc('testKivy.py'): {},
                    loc('tf_train_model.py'): {},
                    loc('train_model.py'): {}}
debug.show-args-dialog = {loc('displayResolution.py'): False,
                          loc('main.py'): False,
                          loc('test.py'): False,
                          loc('testKivy.py'): False,
                          loc('tf_text_graph_common.py'): False,
                          loc('tf_train_model.py'): False,
                          loc('train_model.py'): False,
                          loc('../../Labs/cosc428-lab1/find_camera_calibration.py'): False,
                          loc('../../Labs/cosc428-lab1/load_camera_calibration.py'): False,
                          loc('../../Labs/cosc428-lab2/canny.py'): False,
                          loc('../../Labs/cosc428-lab2/hough_line.py'): False}
debug.var-col-widths = [0.33760683760683763,
                        0.6623931623931624]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'BJs0p4KwGpc41JFt7S1UAEAVUZ'\
        'UqmvIJ',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.4793733681462141,
                 'override_title': None,
                 'pagelist': [('python-shell',
                               'tall',
                               0,
                               {'active-range': (None,
        -1,
        -1),
                                'attrib-starts': [],
                                'code-line': '',
                                'first-line': 562L,
                                'folded-linenos': [],
                                'history': {None: ['import cv2\n',
        'cv2.minAreaRect\n',
        'cv2.minAreaRect()\n',
        'cv2.minAreaRect([[123, 345], [4325, 342]])\n',
        'import numpy as np\n',
        'cv2.minAreaRect(np.array([[123, 345], [4325, 342]]))\n',
        'cv2.minAreaRect(np.array([[123, 345], [4325, 342], [234, 354]]))\n',
        'a = cv2.minAreaRect(np.array([[123, 345], [4325, 342], [234, 354]])'\
        ')\n',
        'help(a)\n',
        'a.width\n',
        'a.size\n',
        'a.area\n',
        'a[1]\n',
        'a[1] = 1\n',
        'b = (a[0], (max(a[1], a[1])), a[2])\n',
        'b = (a[0], (max(a[1]), max(a[1])), a[2])\n',
        'import scipy\n',
        'import os\n',
        'os.walk()\n',
        'os.walk(os.curdir)\n',
        'for dir in os.walk(os.curdir)\n',
        'for dir in os.walk(os.curdir):\n    print(dir)\n\n',
        'a = np.arange(10)\n',
        'b = np.arange(10)\n',
        'np.random.shuffle(b)\n',
        'b\n',
        'a\n',
        'a[b[5:]]\n',
        'b[5:]\n',
        'a.reverse()\n',
        'cluster_labels = np.arange(10)\n',
        'i = 1\n',
        'np.where(cluster_labels == i,1,0)\n',
        'cluster_labels == i\n',
        "(cluster_labels == i).astype('uint8')\n",
        "(cluster_labels == i).astype('uint8') == 1\n",
        'np.bincount([1, 1, 2, 3, 5, 6, 7])\n',
        'np.bincount([1, 1, 2, 3, 5, 6, 7, 6])\n',
        'np.bincount([1, 1, 2, 3, 5, 6, 7, 6]).argmax()\n',
        'p.ones((0), dtype=np.uint8)\n',
        'np.ones((0), dtype=np.uint8)\n',
        'help(cv2.dnn)\n',
        'help(cv2.dnn_Net.forward)\n',
        'help(cv2.rectangle)\n',
        'help(cv2.putText)\n']},
                                'launch-id': None,
                                'sel-line': 614L,
                                'sel-line-start': 45905L,
                                'selection_end': 45905L,
                                'selection_start': 45905L,
                                'zoom': 0L}),
                              ('messages',
                               'tall',
                               0,
                               {'current-domain': 0}),
                              ('debug-exceptions',
                               'tall',
                               0,
                               {}),
                              ('debug-io',
                               'tall',
                               0,
                               {}),
                              ('os-command',
                               'tall',
                               0,
                               {'last-percent': 0.8,
                                'toolbox-percent': 1.0,
                                'toolbox-tree-sel': ''}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [2,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': 4018,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'cv2',
                                       'fReverse': False,
                                       'fSearchText': u'cv',
                                       'fStartPos': 4016,
                                       'fStyle': 'text',
                                       'fWholeWords': True,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': True,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('source-assistant',
                      'wide',
                      1,
                      {}),
                     ('project',
                      'wide',
                      1,
                      {'tree-state': {'file-sort-method': 'by name',
                                      'list-files-first': False,
                                      'tree-states': {'deep': {'expanded-nod'\
        'es': [(1,)],
        'selected-nodes': [(1,
                            5)],
        'top-node': (0,)}},
                                      'tree-style': 'deep'}}),
                     ('indent',
                      'wide',
                      1,
                      {}),
                     ('browser',
                      'wide',
                      1,
                      {'all_tree_states': {loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/app.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/app.py'),
                      'App')]},
        loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/base.py'),
                      'async_runTouchApp')]},
        loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/clock.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/clock.py'),
                      'Clock')]},
        loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/numpy/core/numeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/numpy/core/numeric.py'),
                      'allclose')]},
        loc('main.kv'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': None},
        loc('main.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('main.py'),
                                       'app_inst')]},
        loc('testKivy.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': None},
        loc('../../Labs/cosc428-lab1/find_camera_calibration.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab1/find_camera_calibration.py'),
                      'camera_matrix')]},
        loc('../../Labs/cosc428-lab1/load_camera_calibration.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab1/load_camera_calibration.py'),
                      'camera_matrix')]},
        loc('../../Labs/cosc428-lab1/video_from_webcam.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab1/video_from_webcam.py'),
                      'cap')]},
        loc('../../Labs/cosc428-lab2/canny.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab2/canny.py'),
                      'cap')]}},
                       'browse_mode': u'Current Module',
                       'follow-selection': False,
                       'sort_mode': 'Alphabetically',
                       'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('tf_train_model.py'),
        {'attrib-starts': [],
         'code-line': "net = cv2.dnn.readNetFromTensorflow('tf_model\\\\save"\
                      "d_model.pb')\r\n",
         'first-line': 57L,
         'folded-linenos': [],
         'sel-line': 143L,
         'sel-line-start': 4047L,
         'selection_end': 4047L,
         'selection_start': 4047L,
         'zoom': 0L},
        1620815333.244],
        [loc('train_model.py'),
         {'attrib-starts': [],
          'code-line': 'plt.show()',
          'first-line': 75L,
          'folded-linenos': [],
          'sel-line': 93L,
          'sel-line-start': 2974L,
          'selection_end': 2984L,
          'selection_start': 2984L,
          'zoom': 0L},
         1620815333.784],
        [loc('tf_train_model.py'),
         {'attrib-starts': [],
          'code-line': 'model.fit(train_images, train_labels, epochs=10)\r\n',
          'first-line': 66L,
          'folded-linenos': [],
          'sel-line': 76L,
          'sel-line-start': 2069L,
          'selection_end': 2117L,
          'selection_start': 2117L,
          'zoom': 0L},
         1620818204.663],
        [loc('../../../../../../../../Program Files/Python39/Lib/site-packages/tensorflow/python/keras/engine/training.py'),
         {'attrib-starts': [('Model|0|',
                             134),
                            ('Model|0|._assert_compile_was_called|0|',
                             2686)],
          'code-line': "      raise RuntimeError('You must compile your mode"\
                       "l before '\n",
          'first-line': 2660L,
          'folded-linenos': [],
          'sel-line': 2692L,
          'sel-line-start': 117152L,
          'selection_end': 117152L,
          'selection_start': 117152L,
          'zoom': 0L},
         1620818213.079],
        [loc('tf_train_model.py'),
         {'attrib-starts': [],
          'code-line': 'model.fit(train_images, train_labels, epochs=10)\r\n',
          'first-line': 66L,
          'folded-linenos': [],
          'sel-line': 76L,
          'sel-line-start': 2069L,
          'selection_end': 2117L,
          'selection_start': 2117L,
          'zoom': 0L},
         1620818215.158],
        [loc('../../../../../../../../Program Files/Python39/Lib/site-packages/tensorflow/python/keras/engine/training.py'),
         {'attrib-starts': [('Model|0|',
                             134),
                            ('Model|0|.evaluate|0|',
                             1339)],
          'code-line': '    self._assert_compile_was_called()\n',
          'first-line': 1430L,
          'folded-linenos': [],
          'sel-line': 1435L,
          'sel-line-start': 64382L,
          'selection_end': 64382L,
          'selection_start': 64382L,
          'zoom': 0L},
         1620818215.776],
        [loc('tf_train_model.py'),
         {'attrib-starts': [],
          'code-line': 'test_loss, test_acc = new_model.evaluate(test_images'\
                       ',  test_labels, verbose=2)\r\n',
          'first-line': 66L,
          'folded-linenos': [],
          'sel-line': 87L,
          'sel-line-start': 2442L,
          'selection_end': 2442L,
          'selection_start': 2442L,
          'zoom': 0L},
         1620818218.5],
        [loc('../../../../../../../../Program Files/Python39/Lib/site-packages/tensorflow/python/keras/engine/training.py'),
         {'attrib-starts': [('Model|0|',
                             134),
                            ('Model|0|.evaluate|0|',
                             1339)],
          'code-line': '    self._assert_compile_was_called()\n',
          'first-line': 1430L,
          'folded-linenos': [],
          'sel-line': 1435L,
          'sel-line-start': 64382L,
          'selection_end': 64382L,
          'selection_start': 64382L,
          'zoom': 0L},
         1620818219.611],
        [loc('tf_train_model.py'),
         {'attrib-starts': [],
          'code-line': 'blob = cv2.dnn.blobFromImage(image, 1, (50, 50))\r\n',
          'first-line': 156L,
          'folded-linenos': [],
          'sel-line': 166L,
          'sel-line-start': 4883L,
          'selection_end': 5325L,
          'selection_start': 4883L,
          'zoom': 0L},
         1620820703.963],
        [loc('train_model.py'),
         {'attrib-starts': [],
          'code-line': 'plt.show()',
          'first-line': 75L,
          'folded-linenos': [],
          'sel-line': 93L,
          'sel-line-start': 2974L,
          'selection_end': 2984L,
          'selection_start': 2984L,
          'zoom': 0L},
         1620820706.632],
        [loc('tf_text_graph_common.py'),
         {'attrib-starts': [('writeTextGraph|0|',
                             312)],
          'code-line': '',
          'first-line': 306L,
          'folded-linenos': [],
          'sel-line': 333L,
          'sel-line-start': 10388L,
          'selection_end': 10388L,
          'selection_start': 10388L,
          'zoom': 0L},
         1620820871.122],
        [loc('train_model.py'),
         {'attrib-starts': [],
          'code-line': 'plt.show()',
          'first-line': 75L,
          'folded-linenos': [],
          'sel-line': 93L,
          'sel-line-start': 2974L,
          'selection_end': 2984L,
          'selection_start': 2984L,
          'zoom': 0L},
         1620820872.387],
        [loc('testKivy.py'),
         {'attrib-starts': [('process|0|',
                             210)],
          'code-line': '            \r\n',
          'first-line': 257L,
          'folded-linenos': [],
          'sel-line': 275L,
          'sel-line-start': 9878L,
          'selection_end': 9890L,
          'selection_start': 9890L,
          'zoom': 0L},
         1620820872.744],
        [loc('tf_train_model.py'),
         {'attrib-starts': [],
          'code-line': 'start = time.time()\r\n',
          'first-line': 159L,
          'folded-linenos': [],
          'sel-line': 171L,
          'sel-line-start': 5029L,
          'selection_end': 5048L,
          'selection_start': 5048L,
          'zoom': 0L},
         1620820926.709],
        [loc('testKivy.py'),
         {'attrib-starts': [('process|0|',
                             210)],
          'code-line': '            \r\n',
          'first-line': 245L,
          'folded-linenos': [],
          'sel-line': 275L,
          'sel-line-start': 9878L,
          'selection_end': 9890L,
          'selection_start': 9890L,
          'zoom': 0L},
         1620820928.405],
        [loc('tf_train_model.py'),
         {'attrib-starts': [],
          'code-line': 'idxs = np.argsort(preds[0])[::-1]\r\n',
          'first-line': 162L,
          'folded-linenos': [],
          'sel-line': 179L,
          'sel-line-start': 5364L,
          'selection_end': 5397L,
          'selection_start': 5397L,
          'zoom': 0L},
         1620821224.259],
        [loc('testKivy.py'),
         {'attrib-starts': [('process|0|',
                             210)],
          'code-line': '            \r\n',
          'first-line': 323L,
          'folded-linenos': [],
          'sel-line': 275L,
          'sel-line-start': 9878L,
          'selection_end': 9890L,
          'selection_start': 9890L,
          'zoom': 0L},
         1620821256.78],
        [loc('tf_train_model.py'),
         {'attrib-starts': [],
          'code-line': 'idxs = np.argsort(preds[0])[::-1]\r\n',
          'first-line': 162L,
          'folded-linenos': [],
          'sel-line': 179L,
          'sel-line-start': 5364L,
          'selection_end': 5397L,
          'selection_start': 5397L,
          'zoom': 0L},
         1620821265.196],
        [loc('testKivy.py'),
         {'attrib-starts': [('process|0|',
                             210)],
          'code-line': '            \r\n',
          'first-line': 256L,
          'folded-linenos': [],
          'sel-line': 287L,
          'sel-line-start': 10410L,
          'selection_end': 10422L,
          'selection_start': 10422L,
          'zoom': 0L},
         1620821674.123],
        [loc('tf_train_model.py'),
         {'attrib-starts': [],
          'code-line': 'print("[INFO] classification took {:.5} seconds".for'\
                       'mat(end - start))\r\n',
          'first-line': 162L,
          'folded-linenos': [],
          'sel-line': 175L,
          'sel-line-start': 5168L,
          'selection_end': 5168L,
          'selection_start': 5168L,
          'zoom': 0L},
         1620821678.056]],
        20),
        'current-loc': loc('testKivy.py'),
        'editor-state-list': [(loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py'),
                               {'attrib-starts': [],
                                'code-line': '                weights[i] = 1'\
        '\n',
                                'first-line': 207L,
                                'folded-linenos': [],
                                'sel-line': 171L,
                                'sel-line-start': 5037L,
                                'selection_end': 5060L,
                                'selection_start': 5053L,
                                'zoom': 0L}),
                              (loc('displayResolution.py'),
                               {'attrib-starts': [('MainApp|0|',
        25),
        ('MainApp|0|.build|0|',
         26)],
                                'code-line': "        #texture = Texture.cre"\
        "ate(size=(640, 480), colorfmt='rgb')\r\n",
                                'first-line': 23L,
                                'folded-linenos': [],
                                'sel-line': 28L,
                                'sel-line-start': 492L,
                                'selection_end': 764L,
                                'selection_start': 548L,
                                'zoom': 0L}),
                              (loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/lib/function_base.py'),
                               {'attrib-starts': [('append|0|',
        4616)],
                                'code-line': '    return concatenate((arr, v'\
        'alues), axis=axis)\r\n',
                                'first-line': 4638L,
                                'folded-linenos': [],
                                'sel-line': 4670L,
                                'sel-line-start': 155958L,
                                'selection_end': 155958L,
                                'selection_start': 155958L,
                                'zoom': 0L}),
                              (loc('main.py'),
                               {'attrib-starts': [],
                                'code-line': '#import numpy as np\r\n',
                                'first-line': 67L,
                                'folded-linenos': [],
                                'sel-line': 3L,
                                'sel-line-start': 38L,
                                'selection_end': 54L,
                                'selection_start': 54L,
                                'zoom': 0L}),
                              (loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
                               {'attrib-starts': [('sensor_model|0|',
        89)],
                                'code-line': '    return particle_weights\n',
                                'first-line': 105L,
                                'folded-linenos': [],
                                'sel-line': 137L,
                                'sel-line-start': 4883L,
                                'selection_end': 4910L,
                                'selection_start': 4910L,
                                'zoom': 0L}),
                              (loc('test.py'),
                               {'attrib-starts': [('main|0|',
        4)],
                                'code-line': '    data = np.random.random(si'\
        'ze=(N, 2)).astype(np.float32) * 100\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 11L,
                                'sel-line-start': 161L,
                                'selection_end': 219L,
                                'selection_start': 209L,
                                'zoom': 0L}),
                              (loc('testKivy.py'),
                               {'attrib-starts': [('process|0|',
        210)],
                                'code-line': '            blob = cv2.dnn.blo'\
        'bFromImage(cv2.cvtColor(warped, cv2.COLOR_BGR2GRAY), 1, (50, 50))\r'\
        '\n',
                                'first-line': 255L,
                                'folded-linenos': [],
                                'sel-line': 270L,
                                'sel-line-start': 9776L,
                                'selection_end': 9856L,
                                'selection_start': 9856L,
                                'zoom': 0L}),
                              (loc('tf_train_model.py'),
                               {'attrib-starts': [],
                                'code-line': 'print("[INFO] classification t'\
        'ook {:.5} seconds".format(end - start))\r\n',
                                'first-line': 162L,
                                'folded-linenos': [],
                                'sel-line': 175L,
                                'sel-line-start': 5168L,
                                'selection_end': 5168L,
                                'selection_start': 5168L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py'),
         loc('displayResolution.py'),
         loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/lib/function_base.py'),
         loc('main.py'),
         loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
         loc('test.py'),
         loc('testKivy.py'),
         loc('tf_train_model.py')]),
                               'open_files': [u'../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/lib/function_base.py',
        u'../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py',
        u'displayResolution.py',
        u'main.py',
        u'test.py',
        u'../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py',
        u'tf_train_model.py',
        u'testKivy.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5763546798029556},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           2),
                          1620711404.002),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    3),
                                   1620823241.262),
                 'user_data': {}},
        'window-alloc': (0,
                         0,
                         960,
                         1040)}]}
guimgr.recent-documents = [loc('testKivy.py'),
                           loc('tf_train_model.py'),
                           loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py'),
                           loc('test.py'),
                           loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
                           loc('displayResolution.py'),
                           loc('main.py')]
guimgr.visual-state = {loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/core/fromnumeric.py'): {'a'\
        'ttrib-starts': [('_wrapfunc|0|',
                          51)],
        'code-line': '        return bound(*args, **kwds)\r\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 1651L,
        'selection_end': 1651L,
        'selection_start': 1651L,
        'zoom': 0L},
                       loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/core/numeric.py'): {'a'\
        'ttrib-starts': [('ones|0|',
                          144)],
        'code-line': '    a = empty(shape, dtype, order)\r\n',
        'first-line': 159L,
        'folded-linenos': [],
        'sel-line': 191L,
        'sel-line-start': 6373L,
        'selection_end': 6373L,
        'selection_start': 6373L,
        'zoom': 0L},
                       loc('../../../../../../../../Program Files/Python39/Lib/site-packages/sklearn/cluster/_kmeans.py'): {'a'\
        'ttrib-starts': [('MiniBatchKMeans|0|',
                          1405),
                         ('MiniBatchKMeans|0|.predict|0|',
                          1892)],
        'code-line': '        X = self._check_test_data(X)\r\n',
        'first-line': 1885L,
        'folded-linenos': [],
        'sel-line': 1915L,
        'sel-line-start': 77192L,
        'selection_end': 77192L,
        'selection_start': 77192L,
        'zoom': 0L},
                       loc('../../../../../../../../Program Files/Python39/Lib/site-packages/sklearn/utils/validation.py'): {'a'\
        'ttrib-starts': [('check_consistent_length|0|',
                          247)],
        'code-line': '        raise ValueError("Found input variables with i'\
                     'nconsistent numbers of"\r\n',
        'first-line': 231L,
        'folded-linenos': [],
        'sel-line': 261L,
        'sel-line-start': 9266L,
        'selection_end': 9266L,
        'selection_start': 9266L,
        'zoom': 0L},
                       loc('../../../../../../../../Program Files/Python39/Lib/site-packages/tensorflow/python/eager/function.py'): {'a'\
        'ttrib-starts': [('Function|0|',
                          2936),
                         ('Function|0|._get_concrete_function_internal_garba'\
                          'ge_collected|0|',
                          3044)],
        'code-line': '      graph_function, _ = self._maybe_define_function('\
                     'args, kwargs)\n',
        'first-line': 3017L,
        'folded-linenos': [],
        'sel-line': 3049L,
        'sel-line-start': 131511L,
        'selection_end': 131511L,
        'selection_start': 131511L,
        'zoom': 0L},
                       loc('../../../../../../../../Program Files/Python39/Lib/site-packages/tensorflow/python/framework/func_graph.py'): {'a'\
        'ttrib-starts': [('func_graph_from_py_func|0|',
                          813),
                         ('func_graph_from_py_func|0|.wrapper|0|',
                          970)],
        'code-line': '            return autograph.converted_call(\n',
        'first-line': 953L,
        'folded-linenos': [],
        'sel-line': 974L,
        'sel-line-start': 41131L,
        'selection_end': 41131L,
        'selection_start': 41131L,
        'zoom': 0L},
                       loc('../../../../../../../../Program Files/Python39/Lib/site-packages/tensorflow/python/keras/engine/training.py'): {'a'\
        'ttrib-starts': [('Model|0|',
                          134),
                         ('Model|0|.evaluate|0|',
                          1339)],
        'code-line': '    self._assert_compile_was_called()\n',
        'first-line': 1430L,
        'folded-linenos': [],
        'sel-line': 1435L,
        'sel-line-start': 64382L,
        'selection_end': 64382L,
        'selection_start': 64382L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/app.py'): {'a'\
        'ttrib-starts': [('App|0|',
                          423),
                         ('App|0|.run|0|',
                          945)],
        'code-line': '        self._run_prepare()\r\n',
        'first-line': 597L,
        'folded-linenos': [],
        'sel-line': 948L,
        'sel-line-start': 34576L,
        'selection_end': 34576L,
        'selection_start': 34576L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/base.py'): {'a'\
        'ttrib-starts': [('EventLoopBase|0|',
                          106),
                         ('EventLoopBase|0|.mainloop|0|',
                          343)],
        'code-line': '                if self.window:\r\n',
        'first-line': 342L,
        'folded-linenos': [],
        'sel-line': 347L,
        'sel-line-start': 12003L,
        'selection_end': 12003L,
        'selection_start': 12003L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/clock.py'): {'a'\
        'ttrib-starts': [('ClockBaseBehavior|0|',
                          568),
                         ('ClockBaseBehavior|0|.tick|0|',
                          726)],
        'code-line': '        self.post_idle(ts, self.idle())\r\n',
        'first-line': 726L,
        'folded-linenos': [],
        'sel-line': 732L,
        'sel-line-start': 29197L,
        'selection_end': 29197L,
        'selection_start': 29197L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/numpy/core/numeric.py'): {'a'\
        'ttrib-starts': [('normalize_axis_tuple|0|',
                          1340)],
        'code-line': '    axis = tuple([normalize_axis_index(ax, ndim, argna'\
                     'me) for ax in axis])\r\n',
        'first-line': 1363L,
        'folded-linenos': [],
        'sel-line': 1390L,
        'sel-line-start': 43689L,
        'selection_end': 43689L,
        'selection_start': 43689L,
        'zoom': 0L},
                       loc('../../../../../Program Files/Python39/Lib/site-packages/kivy/input/providers/wm_common.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    windll.user32.GetMessageExtraInfo.argtypes = []\r'\
                     '\n',
        'first-line': 90L,
        'folded-linenos': [],
        'sel-line': 131L,
        'sel-line-start': 4210L,
        'selection_end': 4238L,
        'selection_start': 4238L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part A/Motion_Model.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from numpy import loadtxt, ones, zeros, linspace, sqrt'\
                     '\r\n',
        'first-line': 30L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 385L,
        'selection_end': 439L,
        'selection_start': 439L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part A/Sensor_Calibration.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""Sensor Calibration Program\r\n',
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/README'): {'a'\
        'ttrib-starts': [],
        'code-line': 'ENMT482 Particle Filter Assignment\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/tests.py'): {'a'\
        'ttrib-starts': [('test_move|0|',
                          44)],
        'code-line': '    expected_pose = robot.pose\n',
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 55L,
        'sel-line-start': 1477L,
        'selection_end': 1507L,
        'selection_start': 1507L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/transform.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""Pose transformation functions for particle filter a'\
                     'ssignment.\n',
        'first-line': 76L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""Utility functions for particle filter assignment.\n',
        'first-line': 57L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 2/main.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('android.txt'): {'attrib-starts': [],
        'code-line': 'orientation=portrait',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 40L,
        'selection_end': 60L,
        'selection_start': 60L,
        'zoom': 0L},
                       loc('displayResolution.py'): {'attrib-starts': [],
        'code-line': '# Calibrate camera\r\n',
        'first-line': 24L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('main.kv'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [('CameraWidget|0|',
        26),
        ('CameraWidget|0|.__init__|0|',
         30)],
        'code-line': '        ret, frame = self.cap.read()\r\n',
        'first-line': 44L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 686L,
        'selection_end': 697L,
        'selection_start': 697L,
        'zoom': 0L},
                       loc('testKivy.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tf_text_graph_common.py'): {'attrib-starts': [('w'\
        'riteTextGraph|0|',
        312)],
        'code-line': '',
        'first-line': 306L,
        'folded-linenos': [],
        'sel-line': 333L,
        'sel-line-start': 10388L,
        'selection_end': 10388L,
        'selection_start': 10388L,
        'zoom': 0L},
                       loc('train_model.py'): {'attrib-starts': [],
        'code-line': 'plt.show()',
        'first-line': 75L,
        'folded-linenos': [],
        'sel-line': 93L,
        'sel-line-start': 2974L,
        'selection_end': 2984L,
        'selection_start': 2984L,
        'zoom': 0L},
                       loc('../../Labs/cosc428-lab1/find_camera_calibration.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '        frame = cv2.drawChessboardCorners(frame, (CHEC'\
                     'KERBOARD_COL,CHECKERBOARD_ROW), refined_corners, ret)'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1134L,
        'selection_end': 1150L,
        'selection_start': 1150L,
        'zoom': 0L},
                       loc('../../Labs/cosc428-lab1/load_camera_calibration.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'cap = cv2.VideoCapture(1)  # Open the first camera con'\
                     'nected to the computer.\n',
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 61L,
        'selection_end': 84L,
        'selection_start': 84L,
        'zoom': 0L},
                       loc('../../Labs/cosc428-lab1/video_from_webcam.py'): {'a'\
        'ttrib-starts': [],
        'code-line': "    if cv2.waitKey(1) & 0xFF == ord('q'):  # Close the"\
                     " script when q is pressed.\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 253L,
        'selection_end': 253L,
        'selection_start': 253L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.ptype = 'virtualenv'
proj.pyexec = {None: ('activate',
                      '~/Documents/Code/DiceReader/kivy_venv/bin/activate')}
proj.pypath = {None: ('default',
                      [u'~/.pyenv/versions/3.7.1',
                       u'~/.pyenv/versions/3.7.1/bin',
                       u'$PATH'])}
