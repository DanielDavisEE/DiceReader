#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('../../Labs/cosc428-lab2'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab1'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab6'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab5'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab4'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab3'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../../../2020/S2/ENMT482/Assignment 1/Part B'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../../../2020/S2/ENMT482/Assignment 1/Part A'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True}]
proj.file-list = [loc('android.txt'),
                  loc('displayResolution.py'),
                  loc('main.kv'),
                  loc('main.py'),
                  loc('test.py'),
                  loc('testKivy.py')]
proj.file-type = 'normal'
[user attributes]
debug.breakpoints = {loc('test.py'): {31L: (0,
        None,
        1,
        0)},
                     loc('../../Labs/cosc428-lab1/video_from_webcam.py'): {10L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('test.py'): {},
                    loc('testKivy.py'): {}}
debug.show-args-dialog = {loc('displayResolution.py'): False,
                          loc('main.py'): False,
                          loc('test.py'): False,
                          loc('testKivy.py'): False,
                          loc('../../Labs/cosc428-lab1/find_camera_calibration.py'): False,
                          loc('../../Labs/cosc428-lab1/load_camera_calibration.py'): False,
                          loc('../../Labs/cosc428-lab2/canny.py'): False,
                          loc('../../Labs/cosc428-lab2/hough_line.py'): False}
debug.var-col-widths = [0.33760683760683763,
                        0.6623931623931624]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'BJs0p4KwGpc41JFt7S1UAEAVUZ'\
        'UqmvIJ',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.35656639765223774,
                 'override_title': None,
                 'pagelist': [('python-shell',
                               'tall',
                               0,
                               {'active-range': (None,
        -1,
        -1),
                                'attrib-starts': [],
                                'code-line': '',
                                'first-line': 50L,
                                'folded-linenos': [],
                                'history': {None: ['np.append(a, np.array([2'\
        ', 3]).reshape((1, 2)), axis=0)\n',
        'a[1]\n',
        'a[1].shape\n',
        'a[1].reshape((1, 2))\n',
        'for i, row in reversed(list(enumerate(a))):\n    print(i, row)\n\n',
        'for i, row in reversed(enumerate(a)):\n    print(i, row)\n\n',
        'for i in range(a.shape[0], 0, -1):\n    print(i, a[i])\n\n',
        'for i in range(a.shape[0]-1, 0, -1):\n    print(i, a[i])\n\n',
        'for i in range(a.shape[0]-1, -1, -1):\n    print(i, a[i])\n\n',
        'a = np.array()\n',
        'a = np.array([])\n',
        'if a:\n    print(1)\n\n',
        'a.reshape((0, 1))\n',
        'if a.size == 0:\n    print(1)\n\n',
        'responses = np.arange(6)\n',
        'responses\n',
        'responses[2]\n',
        'a = np.ones((3, 8))\n',
        'a = np.ones((8, 3))\n',
        'np.delete(a, 3, axis=1)\n',
        'np.delete(a, 3, axis=0)\n',
        'np.delete(a, 3)\n',
        'b = np.arange(6)\n',
        'b = np.ones((6, 1))\n',
        'a = ones((6, 3))\n',
        'a = np.ones((6, 3))\n',
        "b = np.ones((6, 1), dtype='uint8')\n",
        'a[b[1]]\n',
        'a[b[1]][2]\n',
        'a[b[1]][1][2]\n',
        'a[b[1]][0][2]\n',
        'a[b[1, :]]\n',
        'a[b[1, 0]]\n',
        'b[1]\n',
        'b[1, 0]\n',
        '640*480\n',
        'import cv2\n',
        'cv2.KMEANS_USE_INITIAL_LABELS\n',
        'cv2.KMEANS_RANDOM_CENTERS\n',
        "a = np.array(dtype=[('x', 'uint32'), ('y', 'uint32'), ('var', 'floa"\
        "t32')])\n",
        'a.shape\n',
        "a = np.array([[]], dtype=[('x', 'uint32'), ('y', 'uint32'), ('var',"\
        " 'float32')])\n",
        "a = np.array([[], [], []], dtype=[('x', 'uint32'), ('y', 'uint32'),"\
        " ('var', 'float32')])\n",
        "a = np.array([[[], [], []]], dtype=[('x', 'uint32'), ('y', 'uint32'"\
        "), ('var', 'float32')])\n",
        "a = np.array([,,,], dtype=[('x', 'uint32'), ('y', 'uint32'), ('var'"\
        ", 'float32')])\n",
        "a = np.array([], dtype=[('x', 'uint32'), ('y', 'uint32'), ('var', '"\
        "float32')])\n",
        "a = np.ones([], dtype=[('x', 'uint32'), ('y', 'uint32'), ('var', 'f"\
        "loat32')])\n",
        "a = np.ones(size=(0, 3), dtype=[('x', 'uint32'), ('y', 'uint32'), ("\
        "'var', 'float32')])\n",
        "a = np.ones((0, 3), dtype=[('x', 'uint32'), ('y', 'uint32'), ('var'"\
        ", 'float32')])\n",
        "a = np.ones((0, 3), dtype=[('x', 'float32'), ('y', 'float32'), ('va"\
        "r', 'float32')])\n",
        "b = np.ones((0, 3), dtype='float32')\n",
        "b = np.ones((0, 3), dtype='<f4')\n",
        "b.astype(('x', 'float32'), ('y', 'float32'), ('var', 'float32'))\n",
        "c = np.dtype(('x', 'float32'), ('y', 'float32'), ('var', 'float32')"\
        ")\n",
        "b.astype([('x', 'float32'), ('y', 'float32'), ('var', 'float32')])"\
        "\n",
        'b = np.ones((2, 3))\n',
        "b = b.astype([('x', 'float32'), ('y', 'float32'), ('var', 'float32'"\
        ")])\n",
        'b.shape\n',
        'b[0,0]\n',
        "b['x']\n",
        'b[0]\n',
        'myarray = np.array([("Hello",2.5,3),("World",3.6,2)])\n',
        'myarray\n',
        "newrecarray = np.core.records.fromarrays(myarray.transpose(), \n   "\
        "                                          names='col1, col2, col3',"\
        "\n                                             formats = 'S8, f8, i"\
        "8')\n\n",
        'newrecarray\n',
        'newrecarray = np.core.records.fromarrays(myarray.transpose(), \n   '\
        '                                      dtype=c)\n\n',
        "dtype=[('x', '<f4'), ('y', '<f4'), ('var', '<f4')]\n",
        "c = np.dtype=[('x', '<f4'), ('y', '<f4'), ('var', '<f4')]\n",
        "c = np.dtype([('x', '<f4'), ('y', '<f4'), ('var', '<f4')])\n",
        'dtype\n',
        'import cv2, numpy as np\n',
        "c = np.dtype([('x', 'float32'), ('y', 'float32'), ('var', 'float32'"\
        ")])\n",
        'c\n',
        'a = np.ones((0, 3), dtype=c)\n',
        "b = np.ones((2, 3), dtype='float32')\n",
        'np.append(a, np.array([1, 2, 2]).reshape((1, 3)), axis=0)\n',
        "np.append(a, np.array([1, 2, 2], dtype='float32').reshape((1, 3)), "\
        "axis=0)\n",
        'np.append(a, np.array([1, 2, 2], dtype=c).reshape((1, 3)), axis=0)'\
        '\n',
        'b.astype(c)\n',
        'np.array(b, dtype=c)\n',
        'np.array([1, 2, 2], dtype=c).reshape((1, 3))\n',
        'a\n',
        "dice_position = np.ones((0, 3), dtype='float32')\n",
        "a = np.ones((0, 3), dtype='float32')\n",
        'b = np.ones((1 3))\n',
        'b = np.ones((1, 3))\n',
        'b\n',
        'type(b[0])\n',
        'type(b[0, 0])\n',
        'np.append(a, b)\n',
        'type(np.append(a, b)[0])\n',
        'd = 1\n',
        "d.astype('float32')\n",
        'np.float32()\n',
        'np.float32(d)\n',
        'p.random.random(size=(4, 2)).astype(np.float32)\n',
        'np.random.random(size=(4, 2)).astype(np.float32)\n',
        'np.float32\n',
        "type(np.ones(1, dtype='float32')[0])\n",
        'type(np.ones(1, dtype=np.float32)[0])\n']},
                                'launch-id': None,
                                'sel-line': 102L,
                                'sel-line-start': 4064L,
                                'selection_end': 4064L,
                                'selection_start': 4064L,
                                'zoom': 0L}),
                              ('messages',
                               'tall',
                               0,
                               {'current-domain': 0}),
                              ('debug-exceptions',
                               'tall',
                               0,
                               {}),
                              ('debug-io',
                               'tall',
                               0,
                               {}),
                              ('os-command',
                               'tall',
                               0,
                               {'last-percent': 0.8,
                                'toolbox-percent': 1.0,
                                'toolbox-tree-sel': ''}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [2,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': 4018,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'cv2',
                                       'fReverse': False,
                                       'fSearchText': u'cv',
                                       'fStartPos': 4016,
                                       'fStyle': 'text',
                                       'fWholeWords': True,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': True,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('source-assistant',
                      'wide',
                      1,
                      {}),
                     ('project',
                      'wide',
                      1,
                      {'tree-state': {'file-sort-method': 'by name',
                                      'list-files-first': False,
                                      'tree-states': {'deep': {'expanded-nod'\
        'es': [(1,)],
        'selected-nodes': [(10,)],
        'top-node': (2,)}},
                                      'tree-style': 'deep'}}),
                     ('indent',
                      'wide',
                      1,
                      {}),
                     ('browser',
                      'wide',
                      1,
                      {'all_tree_states': {loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/app.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/app.py'),
                      'App')]},
        loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/base.py'),
                      'async_runTouchApp')]},
        loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/clock.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/clock.py'),
                      'Clock')]},
        loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/numpy/core/numeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/numpy/core/numeric.py'),
                      'allclose')]},
        loc('main.kv'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': None},
        loc('main.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('main.py'),
                                       'app_inst')]},
        loc('testKivy.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': None},
        loc('../../Labs/cosc428-lab1/find_camera_calibration.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab1/find_camera_calibration.py'),
                      'camera_matrix')]},
        loc('../../Labs/cosc428-lab1/load_camera_calibration.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab1/load_camera_calibration.py'),
                      'camera_matrix')]},
        loc('../../Labs/cosc428-lab1/video_from_webcam.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab1/video_from_webcam.py'),
                      'cap')]},
        loc('../../Labs/cosc428-lab2/canny.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab2/canny.py'),
                      'cap')]}},
                       'browse_mode': u'Current Module',
                       'follow-selection': False,
                       'sort_mode': 'Alphabetically',
                       'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('testKivy.py'),
        {'attrib-starts': [('k_means_dice|0|',
                            67)],
         'code-line': '    compactness, labels, centres = cv2.kmeans(pixelpo'\
                      'ints,\r\n',
         'first-line': 83L,
         'folded-linenos': [],
         'sel-line': 113L,
         'sel-line-start': 3681L,
         'selection_end': 3681L,
         'selection_start': 3681L,
         'zoom': 0L},
        1620745256.683],
        [loc('test.py'),
         {'attrib-starts': [('main|0|',
                             4)],
          'code-line': '    _, new_labels, center = cv2.kmeans(data=reshaped'\
                       '_data,\r\n',
          'first-line': 4L,
          'folded-linenos': [],
          'sel-line': 23L,
          'sel-line-start': 652L,
          'selection_end': 1077L,
          'selection_start': 656L,
          'zoom': 0L},
         1620745260.177],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             67)],
          'code-line': '    compactness, labels, centres = cv2.kmeans(pixelp'\
                       'oints,\r\n',
          'first-line': 92L,
          'folded-linenos': [],
          'sel-line': 113L,
          'sel-line-start': 3681L,
          'selection_end': 3895L,
          'selection_start': 3681L,
          'zoom': 0L},
         1620745302.857],
        [loc('test.py'),
         {'attrib-starts': [],
          'code-line': '    main()',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 34L,
          'sel-line-start': 1142L,
          'selection_end': 1142L,
          'selection_start': 1142L,
          'zoom': 0L},
         1620745310.839],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             67)],
          'code-line': '    compactness, labels, centres = cv2.kmeans(data=p'\
                       'ixelpoints,\r\n',
          'first-line': 89L,
          'folded-linenos': [],
          'sel-line': 115L,
          'sel-line-start': 3721L,
          'selection_end': 3721L,
          'selection_start': 3721L,
          'zoom': 0L},
         1620745392.547],
        [loc('test.py'),
         {'attrib-starts': [('main|0|',
                             4)],
          'code-line': '                                       flags=cv2.KME'\
                       'ANS_USE_INITIAL_LABELS,\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 28L,
          'sel-line-start': 945L,
          'selection_end': 1019L,
          'selection_start': 994L,
          'zoom': 0L},
         1620745397.519],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             67)],
          'code-line': '    compactness, labels, centres = cv2.kmeans(data=p'\
                       'ixelpoints,\r\n',
          'first-line': 92L,
          'folded-linenos': [],
          'sel-line': 118L,
          'sel-line-start': 3833L,
          'selection_end': 3891L,
          'selection_start': 3891L,
          'zoom': 0L},
         1620745557.801],
        [loc('test.py'),
         {'attrib-starts': [('main|0|',
                             4)],
          'code-line': '    return new_labels, center\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 30L,
          'sel-line-start': 1103L,
          'selection_end': 1103L,
          'selection_start': 1103L,
          'zoom': 0L},
         1620745635.881],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             67)],
          'code-line': '        e = pixelpoints[:100]\r\n',
          'first-line': 92L,
          'folded-linenos': [],
          'sel-line': 108L,
          'sel-line-start': 3606L,
          'selection_end': 3634L,
          'selection_start': 3634L,
          'zoom': 0L},
         1620745660.54],
        [loc('test.py'),
         {'attrib-starts': [('main|0|',
                             4)],
          'code-line': '    return new_labels, center\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 30L,
          'sel-line-start': 1103L,
          'selection_end': 1103L,
          'selection_start': 1103L,
          'zoom': 0L},
         1620745663.049],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             67)],
          'code-line': '        ret, results, neighbours, dist = knn.findNea'\
                       'rest(pixelpoints, 1)\r\n',
          'first-line': 92L,
          'folded-linenos': [],
          'sel-line': 101L,
          'sel-line-start': 3335L,
          'selection_end': 3367L,
          'selection_start': 3357L,
          'zoom': 0L},
         1620746227.465],
        [loc('test.py'),
         {'attrib-starts': [('main|0|',
                             4)],
          'code-line': '    return new_labels, center\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 30L,
          'sel-line-start': 1121L,
          'selection_end': 1121L,
          'selection_start': 1121L,
          'zoom': 0L},
         1620746384.772],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             67)],
          'code-line': '    compactness, labels, centres = cv2.kmeans(data=p'\
                       'ixelpoints,\r\n',
          'first-line': 98L,
          'folded-linenos': [],
          'sel-line': 120L,
          'sel-line-start': 3901L,
          'selection_end': 3901L,
          'selection_start': 3901L,
          'zoom': 0L},
         1620746553.458],
        [loc('test.py'),
         {'attrib-starts': [('main|0|',
                             4)],
          'code-line': '    _, new_labels, center = cv2.kmeans(data=reshaped'\
                       '_data,\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 23L,
          'sel-line-start': 694L,
          'selection_end': 694L,
          'selection_start': 694L,
          'zoom': 0L},
         1620746574.326],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             67)],
          'code-line': '                100, 1.0)\r\n',
          'first-line': 83L,
          'folded-linenos': [],
          'sel-line': 91L,
          'sel-line-start': 2985L,
          'selection_end': 3003L,
          'selection_start': 3003L,
          'zoom': 0L},
         1620746580.388],
        [loc('test.py'),
         {'attrib-starts': [('main|0|',
                             4)],
          'code-line': '    _, new_labels, center = cv2.kmeans(data=reshaped'\
                       '_data,\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 23L,
          'sel-line-start': 694L,
          'selection_end': 694L,
          'selection_start': 694L,
          'zoom': 0L},
         1620746583.87],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             67)],
          'code-line': '                100, 1.0)\r\n',
          'first-line': 83L,
          'folded-linenos': [],
          'sel-line': 91L,
          'sel-line-start': 2985L,
          'selection_end': 3003L,
          'selection_start': 3003L,
          'zoom': 0L},
         1620746588.232],
        [loc('test.py'),
         {'attrib-starts': [('main|0|',
                             4)],
          'code-line': '    return new_labels, center\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 30L,
          'sel-line-start': 1119L,
          'selection_end': 1119L,
          'selection_start': 1119L,
          'zoom': 0L},
         1620746649.387],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             67)],
          'code-line': '        bestLabels = results.astype(np.int32)#.resha'\
                       'pe((-1))\r\n',
          'first-line': 83L,
          'folded-linenos': [],
          'sel-line': 102L,
          'sel-line-start': 3410L,
          'selection_end': 3454L,
          'selection_start': 3454L,
          'zoom': 0L},
         1620746660.943],
        [loc('test.py'),
         {'attrib-starts': [('main|0|',
                             4)],
          'code-line': '    data = np.random.random(size=(N, 2)).astype(np.f'\
                       'loat32) * 100\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 11L,
          'sel-line-start': 161L,
          'selection_end': 219L,
          'selection_start': 209L,
          'zoom': 0L},
         1620746676.822]],
        20),
        'current-loc': loc('testKivy.py'),
        'editor-state-list': [(loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py'),
                               {'attrib-starts': [],
                                'code-line': '                weights[i] = 1'\
        '\n',
                                'first-line': 153L,
                                'folded-linenos': [],
                                'sel-line': 171L,
                                'sel-line-start': 5037L,
                                'selection_end': 5060L,
                                'selection_start': 5053L,
                                'zoom': 0L}),
                              (loc('displayResolution.py'),
                               {'attrib-starts': [('MainApp|0|',
        25),
        ('MainApp|0|.build|0|',
         26)],
                                'code-line': "        #texture = Texture.cre"\
        "ate(size=(640, 480), colorfmt='rgb')\r\n",
                                'first-line': 23L,
                                'folded-linenos': [],
                                'sel-line': 28L,
                                'sel-line-start': 492L,
                                'selection_end': 764L,
                                'selection_start': 548L,
                                'zoom': 0L}),
                              (loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/lib/function_base.py'),
                               {'attrib-starts': [('append|0|',
        4616)],
                                'code-line': '    return concatenate((arr, v'\
        'alues), axis=axis)\r\n',
                                'first-line': 4638L,
                                'folded-linenos': [],
                                'sel-line': 4670L,
                                'sel-line-start': 155958L,
                                'selection_end': 155958L,
                                'selection_start': 155958L,
                                'zoom': 0L}),
                              (loc('main.py'),
                               {'attrib-starts': [],
                                'code-line': '#import numpy as np\r\n',
                                'first-line': 67L,
                                'folded-linenos': [],
                                'sel-line': 3L,
                                'sel-line-start': 38L,
                                'selection_end': 54L,
                                'selection_start': 54L,
                                'zoom': 0L}),
                              (loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
                               {'attrib-starts': [('sensor_model|0|',
        89)],
                                'code-line': '    return particle_weights\n',
                                'first-line': 105L,
                                'folded-linenos': [],
                                'sel-line': 137L,
                                'sel-line-start': 4883L,
                                'selection_end': 4910L,
                                'selection_start': 4910L,
                                'zoom': 0L}),
                              (loc('test.py'),
                               {'attrib-starts': [('main|0|',
        4)],
                                'code-line': '    data = np.random.random(si'\
        'ze=(N, 2)).astype(np.float32) * 100\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 11L,
                                'sel-line-start': 161L,
                                'selection_end': 219L,
                                'selection_start': 209L,
                                'zoom': 0L}),
                              (loc('testKivy.py'),
                               {'attrib-starts': [('k_means_dice|0|',
        67)],
                                'code-line': '        knn = cv2.ml.KNearest_'\
        'create()\r\n',
                                'first-line': 112L,
                                'folded-linenos': [],
                                'sel-line': 96L,
                                'sel-line-start': 3189L,
                                'selection_end': 3227L,
                                'selection_start': 3227L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py'),
         loc('displayResolution.py'),
         loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/lib/function_base.py'),
         loc('main.py'),
         loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
         loc('test.py'),
         loc('testKivy.py')]),
                               'open_files': [u'../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py',
        u'main.py',
        u'displayResolution.py',
        u'../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py',
        u'test.py',
        u'testKivy.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5763546798029556},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           2),
                          1620711404.002),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    3),
                                   1620746938.907),
                 'user_data': {}},
        'window-alloc': (0,
                         0,
                         960,
                         1040)}]}
guimgr.recent-documents = [loc('testKivy.py'),
                           loc('test.py'),
                           loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
                           loc('displayResolution.py'),
                           loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/lib/function_base.py'),
                           loc('main.py'),
                           loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py')]
guimgr.visual-state = {loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/core/fromnumeric.py'): {'a'\
        'ttrib-starts': [('_wrapfunc|0|',
                          51)],
        'code-line': '        return bound(*args, **kwds)\r\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 1651L,
        'selection_end': 1651L,
        'selection_start': 1651L,
        'zoom': 0L},
                       loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/core/numeric.py'): {'a'\
        'ttrib-starts': [('ones|0|',
                          144)],
        'code-line': '    a = empty(shape, dtype, order)\r\n',
        'first-line': 159L,
        'folded-linenos': [],
        'sel-line': 191L,
        'sel-line-start': 6373L,
        'selection_end': 6373L,
        'selection_start': 6373L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/app.py'): {'a'\
        'ttrib-starts': [('App|0|',
                          423),
                         ('App|0|.run|0|',
                          945)],
        'code-line': '        self._run_prepare()\r\n',
        'first-line': 597L,
        'folded-linenos': [],
        'sel-line': 948L,
        'sel-line-start': 34576L,
        'selection_end': 34576L,
        'selection_start': 34576L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/base.py'): {'a'\
        'ttrib-starts': [('EventLoopBase|0|',
                          106),
                         ('EventLoopBase|0|.mainloop|0|',
                          343)],
        'code-line': '                if self.window:\r\n',
        'first-line': 342L,
        'folded-linenos': [],
        'sel-line': 347L,
        'sel-line-start': 12003L,
        'selection_end': 12003L,
        'selection_start': 12003L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/clock.py'): {'a'\
        'ttrib-starts': [('ClockBaseBehavior|0|',
                          568),
                         ('ClockBaseBehavior|0|.tick|0|',
                          726)],
        'code-line': '        self.post_idle(ts, self.idle())\r\n',
        'first-line': 726L,
        'folded-linenos': [],
        'sel-line': 732L,
        'sel-line-start': 29197L,
        'selection_end': 29197L,
        'selection_start': 29197L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/numpy/core/numeric.py'): {'a'\
        'ttrib-starts': [('normalize_axis_tuple|0|',
                          1340)],
        'code-line': '    axis = tuple([normalize_axis_index(ax, ndim, argna'\
                     'me) for ax in axis])\r\n',
        'first-line': 1363L,
        'folded-linenos': [],
        'sel-line': 1390L,
        'sel-line-start': 43689L,
        'selection_end': 43689L,
        'selection_start': 43689L,
        'zoom': 0L},
                       loc('../../../../../Program Files/Python39/Lib/site-packages/kivy/input/providers/wm_common.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    windll.user32.GetMessageExtraInfo.argtypes = []\r'\
                     '\n',
        'first-line': 90L,
        'folded-linenos': [],
        'sel-line': 131L,
        'sel-line-start': 4210L,
        'selection_end': 4238L,
        'selection_start': 4238L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/README'): {'a'\
        'ttrib-starts': [],
        'code-line': 'ENMT482 Particle Filter Assignment\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/tests.py'): {'a'\
        'ttrib-starts': [('test_move|0|',
                          44)],
        'code-line': '    expected_pose = robot.pose\n',
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 55L,
        'sel-line-start': 1477L,
        'selection_end': 1507L,
        'selection_start': 1507L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/transform.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""Pose transformation functions for particle filter a'\
                     'ssignment.\n',
        'first-line': 76L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/utils.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""Utility functions for particle filter assignment.\n',
        'first-line': 57L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 2/main.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('android.txt'): {'attrib-starts': [],
        'code-line': 'orientation=portrait',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 40L,
        'selection_end': 60L,
        'selection_start': 60L,
        'zoom': 0L},
                       loc('displayResolution.py'): {'attrib-starts': [],
        'code-line': '# Calibrate camera\r\n',
        'first-line': 24L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('main.kv'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [('CameraWidget|0|',
        26),
        ('CameraWidget|0|.__init__|0|',
         30)],
        'code-line': '        ret, frame = self.cap.read()\r\n',
        'first-line': 44L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 686L,
        'selection_end': 697L,
        'selection_start': 697L,
        'zoom': 0L},
                       loc('testKivy.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Labs/cosc428-lab1/find_camera_calibration.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '        frame = cv2.drawChessboardCorners(frame, (CHEC'\
                     'KERBOARD_COL,CHECKERBOARD_ROW), refined_corners, ret)'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1134L,
        'selection_end': 1150L,
        'selection_start': 1150L,
        'zoom': 0L},
                       loc('../../Labs/cosc428-lab1/load_camera_calibration.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'cap = cv2.VideoCapture(1)  # Open the first camera con'\
                     'nected to the computer.\n',
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 61L,
        'selection_end': 84L,
        'selection_start': 84L,
        'zoom': 0L},
                       loc('../../Labs/cosc428-lab1/video_from_webcam.py'): {'a'\
        'ttrib-starts': [],
        'code-line': "    if cv2.waitKey(1) & 0xFF == ord('q'):  # Close the"\
                     " script when q is pressed.\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 253L,
        'selection_end': 253L,
        'selection_start': 253L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part A/Motion_Model.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from numpy import loadtxt, ones, zeros, linspace, sqrt'\
                     '\r\n',
        'first-line': 30L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 385L,
        'selection_end': 439L,
        'selection_start': 439L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part A/Sensor_Calibration.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""Sensor Calibration Program\r\n',
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.ptype = 'virtualenv'
proj.pyexec = {None: ('activate',
                      '~/Documents/Code/DiceReader/kivy_venv/bin/activate')}
proj.pypath = {None: ('default',
                      [u'~/.pyenv/versions/3.7.1',
                       u'~/.pyenv/versions/3.7.1/bin',
                       u'$PATH'])}
