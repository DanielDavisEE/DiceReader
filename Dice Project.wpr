#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('../../Labs/cosc428-lab2'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab1'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab6'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab5'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab4'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True},
                       {'dirloc': loc('../../Labs/cosc428-lab3'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True}]
proj.file-list = [loc('android.txt'),
                  loc('displayResolution.py'),
                  loc('main.kv'),
                  loc('main.py'),
                  loc('testKivy.py')]
proj.file-type = 'normal'
[user attributes]
debug.breakpoints = {loc('../../Labs/cosc428-lab1/video_from_webcam.py'): {10L: (0,
        None,
        1,
        0)}}
debug.show-args-dialog = {loc('displayResolution.py'): False,
                          loc('main.py'): False,
                          loc('testKivy.py'): False,
                          loc('../../Labs/cosc428-lab1/find_camera_calibration.py'): False,
                          loc('../../Labs/cosc428-lab1/load_camera_calibration.py'): False,
                          loc('../../Labs/cosc428-lab2/canny.py'): False,
                          loc('../../Labs/cosc428-lab2/hough_line.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'BJs0p4KwGpc41JFt7S1UAEAVUZ'\
        'UqmvIJ',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.35656639765223774,
                 'override_title': None,
                 'pagelist': [('python-shell',
                               'tall',
                               0,
                               {'active-range': (None,
        -1,
        -1),
                                'attrib-starts': [],
                                'code-line': '',
                                'first-line': 146L,
                                'folded-linenos': [],
                                'history': {None: ['import cv2\n',
        'cv2. __version__\n',
        'import numpy as np\n',
        'a = np.ones(4)\n',
        'b = np.zeros_like(a)\n',
        'b\n',
        'zip(a, ,b)\n',
        'zip(a, b)\n',
        'for x in zip(a, b):\n    print(x)\n\n',
        'tuple(np.random.randint(10, 255, size=3, dtype=np.uint8))\n',
        'a = np.random.randint(1, 9, size=50)\n',
        'np.array([0, 255])[a==2]\n',
        'a==2\n',
        'np.array([0, 255])[(a==2).astype(uint8)]\n',
        "np.array([0, 255])[(a==2).astype('uint8')]\n",
        'a = np.zeros((4, 5))\n',
        'a[1, 3] = 50\n',
        'a[1, 3] = 0\n',
        'a[(1, 2), (3, 3)] = 0\n',
        'a[(1, 2), (3, 3)] = 50\n',
        'a\n',
        'a == 50\n',
        'a[a == 50]\n',
        'a[a != 0]\n',
        'a[[1, 2, 3, 4]]\n',
        'a[[1, 2, 3, ]]\n',
        'a.flatten()[[1, 2, 3, ]]\n',
        'a.flatten()[[1, 2, 3, 4, 5, 6]]\n',
        'help(np.nonzero)\n',
        'import os\n',
        'os.listdir()\n']},
                                'launch-id': None,
                                'sel-line': 198L,
                                'sel-line-start': 6474L,
                                'selection_end': 6474L,
                                'selection_start': 6474L,
                                'zoom': 0L}),
                              ('messages',
                               'tall',
                               0,
                               {'current-domain': 0}),
                              ('debug-exceptions',
                               'tall',
                               0,
                               {}),
                              ('debug-io',
                               'tall',
                               0,
                               {}),
                              ('os-command',
                               'tall',
                               0,
                               {'last-percent': 0.8,
                                'toolbox-percent': 1.0,
                                'toolbox-tree-sel': ''}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'centre',
                                       'fReverse': False,
                                       'fSearchText': u'center',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': True,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('source-assistant',
                      'wide',
                      1,
                      {}),
                     ('project',
                      'wide',
                      1,
                      {'tree-state': {'file-sort-method': 'by name',
                                      'list-files-first': False,
                                      'tree-states': {'deep': {'expanded-nod'\
        'es': [],
        'selected-nodes': [(10,)],
        'top-node': (0,)}},
                                      'tree-style': 'deep'}}),
                     ('indent',
                      'wide',
                      1,
                      {}),
                     ('browser',
                      'wide',
                      1,
                      {'all_tree_states': {loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/app.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/app.py'),
                      'App')]},
        loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/base.py'),
                      'async_runTouchApp')]},
        loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/clock.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/clock.py'),
                      'Clock')]},
        loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/numpy/core/numeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/numpy/core/numeric.py'),
                      'allclose')]},
        loc('main.kv'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': None},
        loc('main.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('main.py'),
                                       'app_inst')]},
        loc('testKivy.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': None},
        loc('../../Labs/cosc428-lab1/find_camera_calibration.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab1/find_camera_calibration.py'),
                      'camera_matrix')]},
        loc('../../Labs/cosc428-lab1/load_camera_calibration.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab1/load_camera_calibration.py'),
                      'camera_matrix')]},
        loc('../../Labs/cosc428-lab1/video_from_webcam.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab1/video_from_webcam.py'),
                      'cap')]},
        loc('../../Labs/cosc428-lab2/canny.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Labs/cosc428-lab2/canny.py'),
                      'cap')]}},
                       'browse_mode': u'Current Module',
                       'follow-selection': False,
                       'sort_mode': 'Alphabetically',
                       'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('displayResolution.py'),
        {'attrib-starts': [('MainApp|0|',
                            25),
                           ('MainApp|0|.build|0|',
                            26)],
         'code-line': '        cap = cv2.VideoCapture(0)  # Open the first c'\
                      'amera connected to the computer.\n',
         'first-line': 23L,
         'folded-linenos': [],
         'sel-line': 30L,
         'sel-line-start': 540L,
         'selection_end': 764L,
         'selection_start': 548L,
         'zoom': 0L},
        1619955345.870701],
        [loc('main.py'),
         {'attrib-starts': [('MainApp|0|',
                             183),
                            ('MainApp|0|.build|0|',
                             185)],
          'code-line': '        #return self.widget_inst\n',
          'first-line': 174L,
          'folded-linenos': [],
          'sel-line': 195L,
          'sel-line-start': 6817L,
          'selection_end': 6849L,
          'selection_start': 6849L,
          'zoom': 0L},
         1620282367.223948],
        [loc('testKivy.py'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1620282415.938124],
        [loc('main.py'),
         {'attrib-starts': [],
          'code-line': '#import numpy as np\r\n',
          'first-line': 103L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 38L,
          'selection_end': 54L,
          'selection_start': 54L,
          'zoom': 0L},
         1620612903.396],
        [loc('testKivy.py'),
         {'attrib-starts': [],
          'code-line': 'dice_positions = \r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 137L,
          'selection_end': 154L,
          'selection_start': 154L,
          'zoom': 0L},
         1620614343.764],
        [loc('../../../../2020/S2/ENMT482/Assignment 1/Part A/Sensor_Calibration.py'),
         {'attrib-starts': [],
          'code-line': '"""Sensor Calibration Program\r\n',
          'first-line': 48L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1620614355.196],
        [loc('testKivy.py'),
         {'attrib-starts': [],
          'code-line': 'dice_positions = \r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 137L,
          'selection_end': 154L,
          'selection_start': 154L,
          'zoom': 0L},
         1620614367.383],
        [loc('../../../../2020/S2/ENMT482/Assignment 1/Part A/Motion_Model.py'),
         {'attrib-starts': [],
          'code-line': 'from numpy import loadtxt, ones, zeros, linspace, sq'\
                       'rt\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 14L,
          'sel-line-start': 385L,
          'selection_end': 439L,
          'selection_start': 439L,
          'zoom': 0L},
         1620614566.921],
        [loc('testKivy.py'),
         {'attrib-starts': [],
          'code-line': 'dice_positions = \r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 137L,
          'selection_end': 154L,
          'selection_start': 154L,
          'zoom': 0L},
         1620614582.15],
        [loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
         {'attrib-starts': [],
          'code-line': '"""Particle filter sensor and motion model implement'\
                       'ations.\n',
          'first-line': 117L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1620614607.501],
        [loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py'),
         {'attrib-starts': [],
          'code-line': '"""Particle filter demonstration program.\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1620614630.537],
        [loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/tests.py'),
         {'attrib-starts': [('test_move|0|',
                             44)],
          'code-line': '    expected_pose = robot.pose\n',
          'first-line': 39L,
          'folded-linenos': [],
          'sel-line': 55L,
          'sel-line-start': 1477L,
          'selection_end': 1507L,
          'selection_start': 1507L,
          'zoom': 0L},
         1620614648.091],
        [loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py'),
         {'attrib-starts': [],
          'code-line': '"""Particle filter demonstration program.\n',
          'first-line': 120L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1620615145.653],
        [loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
         {'attrib-starts': [],
          'code-line': '"""Particle filter sensor and motion model implement'\
                       'ations.\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1620615366.284],
        [loc('testKivy.py'),
         {'attrib-starts': [('process|0|',
                             66)],
          'code-line': '    cv2.drawContours(image_processed, contours, -1, '\
                       '(0,255,0), thickness=1)#, hierarchy=hierarchy, maxLe'\
                       'vel=1)\r\n',
          'first-line': 60L,
          'folded-linenos': [],
          'sel-line': 75L,
          'sel-line-start': 2602L,
          'selection_end': 2648L,
          'selection_start': 2640L,
          'zoom': 0L},
         1620616805.796],
        [loc('../../../../../../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
         {'displayed-index': -1,
          'viewer-state': {'history': [-1,
                                       61],
                           'history-pos': 0,
                           'index': -1,
                           'top': 0,
                           'top-left-pos': 0}},
         1620616805.797],
        [loc('../../../../../../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
         {'displayed-index': 61,
          'viewer-state': {'history': [-1,
                                       61],
                           'history-pos': 1,
                           'index': 61,
                           'top': 0,
                           'top-left-pos': 0}},
         1620616808.756],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             68)],
          'code-line': '    pixelpoints = np.transpose(np.nonzero(thresh)).a'\
                       'stype("float32")\r\n',
          'first-line': 60L,
          'folded-linenos': [],
          'sel-line': 74L,
          'sel-line-start': 2353L,
          'selection_end': 2353L,
          'selection_start': 2353L,
          'zoom': 0L},
         1620640883.337],
        [loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/core/fromnumeric.py'),
         {'attrib-starts': [('_wrapfunc|0|',
                             51)],
          'code-line': '        return bound(*args, **kwds)\r\n',
          'first-line': 25L,
          'folded-linenos': [],
          'sel-line': 57L,
          'sel-line-start': 1651L,
          'selection_end': 1651L,
          'selection_start': 1651L,
          'zoom': 0L},
         1620640886.902],
        [loc('testKivy.py'),
         {'attrib-starts': [('k_means_dice|0|',
                             68)],
          'code-line': '    compactness, labels, centers = cv2.kmeans(pixelp'\
                       'oints,\r\n',
          'first-line': 75L,
          'folded-linenos': [],
          'sel-line': 82L,
          'sel-line-start': 2700L,
          'selection_end': 2732L,
          'selection_start': 2725L,
          'zoom': 0L},
         1620647571.421]],
        20),
        'current-loc': loc('testKivy.py'),
        'editor-state-list': [(loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py'),
                               {'attrib-starts': [],
                                'code-line': '"""Particle filter demonstrati'\
        'on program.\n',
                                'first-line': 120L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('displayResolution.py'),
                               {'attrib-starts': [('MainApp|0|',
        25),
        ('MainApp|0|.build|0|',
         26)],
                                'code-line': '        cap = cv2.VideoCapture'\
        '(0)  # Open the first camera connected to the computer.\n',
                                'first-line': 23L,
                                'folded-linenos': [],
                                'sel-line': 30L,
                                'sel-line-start': 540L,
                                'selection_end': 764L,
                                'selection_start': 548L,
                                'zoom': 0L}),
                              (loc('main.py'),
                               {'attrib-starts': [],
                                'code-line': '#import numpy as np\r\n',
                                'first-line': 103L,
                                'folded-linenos': [],
                                'sel-line': 3L,
                                'sel-line-start': 38L,
                                'selection_end': 54L,
                                'selection_start': 54L,
                                'zoom': 0L}),
                              (loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
                               {'attrib-starts': [],
                                'code-line': '"""Particle filter sensor and '\
        'motion model implementations.\n',
                                'first-line': 27L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('testKivy.py'),
                               {'attrib-starts': [('process|0|',
        112)],
                                'code-line': '        image_count += 1\r\n',
                                'first-line': 132L,
                                'folded-linenos': [],
                                'sel-line': 158L,
                                'sel-line-start': 5566L,
                                'selection_end': 5590L,
                                'selection_start': 5590L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py'),
         loc('displayResolution.py'),
         loc('main.py'),
         loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
         loc('testKivy.py')]),
                               'open_files': [u'displayResolution.py',
        u'main.py',
        u'../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py',
        u'../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py',
        u'testKivy.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.3683453237410072},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           1),
                          1619506989.22),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    3),
                                   1620660161.124),
                 'user_data': {}},
        'window-alloc': (72,
                         27,
                         1826,
                         1008)}]}
guimgr.recent-documents = [loc('testKivy.py'),
                           loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/models.py'),
                           loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/demo.py'),
                           loc('main.py')]
guimgr.visual-state = {loc('../../../../../../../../Program Files/Python39/Lib/site-packages/numpy/core/fromnumeric.py'): {'a'\
        'ttrib-starts': [('_wrapfunc|0|',
                          51)],
        'code-line': '        return bound(*args, **kwds)\r\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 1651L,
        'selection_end': 1651L,
        'selection_start': 1651L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/app.py'): {'a'\
        'ttrib-starts': [('App|0|',
                          423),
                         ('App|0|.run|0|',
                          945)],
        'code-line': '        self._run_prepare()\r\n',
        'first-line': 597L,
        'folded-linenos': [],
        'sel-line': 948L,
        'sel-line-start': 34576L,
        'selection_end': 34576L,
        'selection_start': 34576L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/base.py'): {'a'\
        'ttrib-starts': [('EventLoopBase|0|',
                          106),
                         ('EventLoopBase|0|.mainloop|0|',
                          343)],
        'code-line': '                if self.window:\r\n',
        'first-line': 342L,
        'folded-linenos': [],
        'sel-line': 347L,
        'sel-line-start': 12003L,
        'selection_end': 12003L,
        'selection_start': 12003L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/kivy/clock.py'): {'a'\
        'ttrib-starts': [('ClockBaseBehavior|0|',
                          568),
                         ('ClockBaseBehavior|0|.tick|0|',
                          726)],
        'code-line': '        self.post_idle(ts, self.idle())\r\n',
        'first-line': 726L,
        'folded-linenos': [],
        'sel-line': 732L,
        'sel-line-start': 29197L,
        'selection_end': 29197L,
        'selection_start': 29197L,
        'zoom': 0L},
                       loc('../../../../../Desktop/my_kivy_project/Lib/site-packages/numpy/core/numeric.py'): {'a'\
        'ttrib-starts': [('normalize_axis_tuple|0|',
                          1340)],
        'code-line': '    axis = tuple([normalize_axis_index(ax, ndim, argna'\
                     'me) for ax in axis])\r\n',
        'first-line': 1363L,
        'folded-linenos': [],
        'sel-line': 1390L,
        'sel-line-start': 43689L,
        'selection_end': 43689L,
        'selection_start': 43689L,
        'zoom': 0L},
                       loc('../../../../../Program Files/Python39/Lib/site-packages/kivy/input/providers/wm_common.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    windll.user32.GetMessageExtraInfo.argtypes = []\r'\
                     '\n',
        'first-line': 90L,
        'folded-linenos': [],
        'sel-line': 131L,
        'sel-line-start': 4210L,
        'selection_end': 4238L,
        'selection_start': 4238L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part A/Motion_Model.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from numpy import loadtxt, ones, zeros, linspace, sqrt'\
                     '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 385L,
        'selection_end': 439L,
        'selection_start': 439L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part A/Sensor_Calibration.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""Sensor Calibration Program\r\n',
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../2020/S2/ENMT482/Assignment 1/Part B/tests.py'): {'a'\
        'ttrib-starts': [('test_move|0|',
                          44)],
        'code-line': '    expected_pose = robot.pose\n',
        'first-line': 39L,
        'folded-linenos': [],
        'sel-line': 55L,
        'sel-line-start': 1477L,
        'selection_end': 1507L,
        'selection_start': 1507L,
        'zoom': 0L},
                       loc('android.txt'): {'attrib-starts': [],
        'code-line': 'orientation=portrait',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 40L,
        'selection_end': 60L,
        'selection_start': 60L,
        'zoom': 0L},
                       loc('displayResolution.py'): {'attrib-starts': [],
        'code-line': '# Calibrate camera\r\n',
        'first-line': 24L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('main.kv'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [('CameraWidget|0|',
        26),
        ('CameraWidget|0|.__init__|0|',
         30)],
        'code-line': '        ret, frame = self.cap.read()\r\n',
        'first-line': 44L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 686L,
        'selection_end': 697L,
        'selection_start': 697L,
        'zoom': 0L},
                       loc('testKivy.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Labs/cosc428-lab1/find_camera_calibration.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '        frame = cv2.drawChessboardCorners(frame, (CHEC'\
                     'KERBOARD_COL,CHECKERBOARD_ROW), refined_corners, ret)'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1134L,
        'selection_end': 1150L,
        'selection_start': 1150L,
        'zoom': 0L},
                       loc('../../Labs/cosc428-lab1/load_camera_calibration.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'cap = cv2.VideoCapture(1)  # Open the first camera con'\
                     'nected to the computer.\n',
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 61L,
        'selection_end': 84L,
        'selection_start': 84L,
        'zoom': 0L},
                       loc('../../Labs/cosc428-lab1/video_from_webcam.py'): {'a'\
        'ttrib-starts': [],
        'code-line': "    if cv2.waitKey(1) & 0xFF == ord('q'):  # Close the"\
                     " script when q is pressed.\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 253L,
        'selection_end': 253L,
        'selection_start': 253L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.ptype = 'virtualenv'
proj.pyexec = {None: ('activate',
                      '~/Documents/Code/DiceReader/kivy_venv/bin/activate')}
proj.pypath = {None: ('default',
                      [u'~/.pyenv/versions/3.7.1',
                       u'~/.pyenv/versions/3.7.1/bin',
                       u'$PATH'])}
